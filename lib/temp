 FocusedMenuHolder(
                                      widthBorder: 0,
                                      menuItemExtent: 45,
                                      menuWidth:
                                          MediaQuery.of(context).size.width,
                                      animateMenuItems: true,
                                      blurSize: 0.25,
                                      blurBackgroundColor: Colors.black54,
                                      menuOffset: -20,
                                      borderColor: const Color(0xff141414),
                                      openWithTap: false,
                                      onPressed: () {},
                                      menuItems: <FocusedMenuItem>[
                                        FocusedMenuItem(
                                            backgroundColor:
                                                const Color(0xff141414),
                                            title: const Text(
                                              "Download",
                                              style: TextStyle(
                                                  color: Color(0xff3e4da0)),
                                            ),
                                            trailingIcon: const Icon(
                                              Ionicons.cloud_download_outline,
                                              color: Color(0xff3e4da0),
                                            ),
                                            onPressed: () async {
                                              setState(() {
                                                _isAudioDownloading = true;
                                                downloadIndex = i;
                                              });
                                              await _createFolder();
                                              var manifest = await yt
                                                  .videos.streamsClient
                                                  .getManifest(
                                                      videoResult[i].url);
                                              var streamInfo = manifest
                                                  .audioOnly
                                                  .withHighestBitrate();
                                              stream = streamInfo;

                                              await download(
                                                  stream!.url.toString(),
                                                  "${removeUnicodeApostrophes2(videoResult[i].title)}.mp3",
                                                  '');
                                              Flushbar(
                                                duration:
                                                    const Duration(seconds: 2),
                                                backgroundColor:
                                                    const Color(0xff141414),
                                                flushbarPosition:
                                                    FlushbarPosition.TOP,
                                                title: "Tubify",
                                                message:
                                                    "\naudio is started to download.",
                                              ).show(context);
                                              setState(() {
                                                _isAudioDownloading = false;
                                              });
                                            }),
                                        FocusedMenuItem(
                                            backgroundColor:
                                                const Color(0xff141414),
                                            title: const Text(
                                              "Download to an existing Playlist",
                                              style: TextStyle(
                                                  color: Color(0xff3e4da0)),
                                            ),
                                            trailingIcon: const Icon(
                                              Ionicons.cloud_download_outline,
                                              color: Color(0xff3e4da0),
                                            ),
                                            onPressed: () async {
                                              String playlist = '';
                                              showDialog(
                                                  context: context,
                                                  builder: (ctx) => AlertDialog(
                                                        backgroundColor:
                                                            Color(0xff141414),
                                                        title: Text(
                                                          'your playlists.',
                                                          style: TextStyle(
                                                              fontSize: 14,
                                                              color:
                                                                  Colors.white),
                                                        ),
                                                        content:
                                                            StatefulBuilder(
                                                          // You need this, notice the parameters below:
                                                          builder: (BuildContext
                                                                  ctx,
                                                              StateSetter
                                                                  _setState) {
                                                            return Column(
                                                              mainAxisSize:
                                                                  MainAxisSize
                                                                      .min,
                                                              children: [
                                                                for (var j
                                                                    in playlists) ...[
                                                                  RadioListTile(
                                                                    activeColor:
                                                                        Color(
                                                                            0xff3e4da0),
                                                                    toggleable:
                                                                        true,
                                                                    title: Text(
                                                                      j.path
                                                                          .split(
                                                                              '/')
                                                                          .last,
                                                                      style: TextStyle(
                                                                          color: Colors
                                                                              .white,
                                                                          fontSize:
                                                                              12),
                                                                    ),
                                                                    value: j
                                                                        .path
                                                                        .split(
                                                                            '/')
                                                                        .last,
                                                                    groupValue:
                                                                        playlist,
                                                                    onChanged:
                                                                        (value) {
                                                                      _setState(
                                                                          () {
                                                                        playlist =
                                                                            value.toString();
                                                                      });
                                                                    },
                                                                  )
                                                                ],
                                                              ],
                                                            );
                                                          },
                                                        ),
                                                        actions: [
                                                          TextButton(
                                                              child: const Text(
                                                                  "Done"),
                                                              onPressed:
                                                                  () async {
                                                                Navigator.pop(
                                                                    ctx);
                                                                setState(() {
                                                                  _isAudioDownloading =
                                                                      true;
                                                                  downloadIndex =
                                                                      i;
                                                                });
                                                                await _createFolder();
                                                                var manifest = await yt
                                                                    .videos
                                                                    .streamsClient
                                                                    .getManifest(
                                                                        videoResult[i]
                                                                            .url);
                                                                var streamInfo =
                                                                    manifest
                                                                        .audioOnly
                                                                        .withHighestBitrate();
                                                                stream =
                                                                    streamInfo;

                                                                await download(
                                                                    stream!.url
                                                                        .toString(),
                                                                    "${removeUnicodeApostrophes2(videoResult[i].title)}.mp3",
                                                                    playlist);
                                                                Flushbar(
                                                                  duration:
                                                                      const Duration(
                                                                          seconds:
                                                                              2),
                                                                  backgroundColor:
                                                                      const Color(
                                                                          0xff141414),
                                                                  flushbarPosition:
                                                                      FlushbarPosition
                                                                          .TOP,
                                                                  title:
                                                                      "Tubify",
                                                                  message:
                                                                      "\naudio is started to download.",
                                                                ).show(context);
                                                                setState(() {
                                                                  _isAudioDownloading =
                                                                      false;
                                                                });
                                                              }),
                                                        ],
                                                      ));
                                            }),
                                        FocusedMenuItem(
                                            backgroundColor:
                                                const Color(0xff141414),
                                            title: const Text(
                                              "Download to new Playlist",
                                              style: TextStyle(
                                                  color: Color(0xff3e4da0)),
                                            ),
                                            trailingIcon: const Icon(
                                              Ionicons.cloud_download_outline,
                                              color: Color(0xff3e4da0),
                                            ),
                                            onPressed: () async {
                                              String playlist = '';
                                              final GlobalKey<FormState>
                                                  _formKey =
                                                  GlobalKey<FormState>();
                                              showDialog(
                                                  context: context,
                                                  builder: (ctx) => AlertDialog(
                                                        backgroundColor:
                                                            Color(0xff141414),
                                                        title: Text(
                                                          'Add new Playlist',
                                                          style: TextStyle(
                                                              fontSize: 14,
                                                              color:
                                                                  Colors.white),
                                                        ),
                                                        content:
                                                            StatefulBuilder(
                                                          builder: (BuildContext
                                                                  ctx,
                                                              StateSetter
                                                                  _setState) {
                                                            return Form(
                                                                key: _formKey,
                                                                child:
                                                                    TextFormField(
                                                                  style: TextStyle(
                                                                      color: Colors
                                                                          .white),
                                                                  validator: (value) =>
                                                                      value!.isEmpty
                                                                          ? 'please enter playlist name'
                                                                          : null,
                                                                  onChanged:
                                                                      (value) {
                                                                    playlist =
                                                                        value;
                                                                    _setState(
                                                                        () {});
                                                                  },
                                                                  decoration:
                                                                      InputDecoration(
                                                                    hintText:
                                                                        'playlist name',
                                                                    hintStyle: TextStyle(
                                                                        color: Colors
                                                                            .grey,
                                                                        fontSize:
                                                                            12),
                                                                    enabledBorder:
                                                                        const OutlineInputBorder(
                                                                      borderSide: BorderSide(
                                                                          width:
                                                                              1,
                                                                          color:
                                                                              Colors.white),
                                                                    ),
                                                                    focusedBorder:
                                                                        const OutlineInputBorder(
                                                                      borderSide: BorderSide(
                                                                          width:
                                                                              1,
                                                                          color:
                                                                              Color(0xff3e4da0)),
                                                                    ),
                                                                    focusedErrorBorder:
                                                                        const OutlineInputBorder(
                                                                      borderSide: BorderSide(
                                                                          width:
                                                                              1,
                                                                          color:
                                                                              Colors.red),
                                                                    ),
                                                                  ),
                                                                ));
                                                          },
                                                        ),
                                                        actions: [
                                                          TextButton(
                                                              child: const Text(
                                                                  "Done"),
                                                              onPressed:
                                                                  () async {
                                                                if (_formKey
                                                                    .currentState!
                                                                    .validate()) {
                                                                  Navigator.pop(
                                                                      ctx);
                                                                  if (!await Directory(
                                                                          dir!.path +
                                                                              '/${playlist}')
                                                                      .exists()) {
                                                                    Directory(dir!.path +
                                                                            '/${playlist}')
                                                                        .create()
                                                                        .then(
                                                                            (value) async {
                                                                      setState(
                                                                          () {
                                                                        _isAudioDownloading =
                                                                            true;
                                                                        downloadIndex =
                                                                            i;
                                                                      });
                                                                      await _createFolder();
                                                                      var manifest = await yt
                                                                          .videos
                                                                          .streamsClient
                                                                          .getManifest(
                                                                              videoResult[i].url);
                                                                      var streamInfo = manifest
                                                                          .audioOnly
                                                                          .withHighestBitrate();
                                                                      stream =
                                                                          streamInfo;

                                                                      await download(
                                                                          stream!
                                                                              .url
                                                                              .toString(),
                                                                          "${removeUnicodeApostrophes2(videoResult[i].title)}.mp3",
                                                                          playlist);
                                                                      Flushbar(
                                                                        duration:
                                                                            const Duration(seconds: 2),
                                                                        backgroundColor:
                                                                            const Color(0xff141414),
                                                                        flushbarPosition:
                                                                            FlushbarPosition.TOP,
                                                                        title:
                                                                            "Tubify",
                                                                        message:
                                                                            "\naudio is started to download.",
                                                                      ).show(
                                                                          context);
                                                                      setState(
                                                                          () {
                                                                        _isAudioDownloading =
                                                                            false;
                                                                      });
                                                                    });
                                                                  } else {
                                                                    setState(
                                                                        () {
                                                                      _isAudioDownloading =
                                                                          true;
                                                                      downloadIndex =
                                                                          i;
                                                                    });
                                                                    await _createFolder();
                                                                    var manifest = await yt
                                                                        .videos
                                                                        .streamsClient
                                                                        .getManifest(
                                                                            videoResult[i].url);
                                                                    var streamInfo =
                                                                        manifest
                                                                            .audioOnly
                                                                            .withHighestBitrate();
                                                                    stream =
                                                                        streamInfo;

                                                                    await download(
                                                                        stream!
                                                                            .url
                                                                            .toString(),
                                                                        "${removeUnicodeApostrophes2(videoResult[i].title)}.mp3",
                                                                        playlist);
                                                                    Flushbar(
                                                                      duration: const Duration(
                                                                          seconds:
                                                                              2),
                                                                      backgroundColor:
                                                                          const Color(
                                                                              0xff141414),
                                                                      flushbarPosition:
                                                                          FlushbarPosition
                                                                              .TOP,
                                                                      title:
                                                                          "Tubify",
                                                                      message:
                                                                          "\naudio is started to download.",
                                                                    ).show(
                                                                        context);
                                                                    setState(
                                                                        () {
                                                                      _isAudioDownloading =
                                                                          false;
                                                                    });
                                                                  }
                                                                }
                                                              }),
                                                        ],
                                                      ));
                                            }),
                                      ],